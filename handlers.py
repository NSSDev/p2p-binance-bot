import telebot
from telebot import types
import scrape
import config
import messages
import db
import payment
import psycopg2
import schedule
from time import sleep
import asyncio


bot = telebot.TeleBot(token=config.TELEGRAM_API_TOKEN)
ref_url = "http://t.me/airogramhashim_bot?start={}"

@bot.message_handler(commands=['menu'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_scrape = types.KeyboardButton(text="üìàeXpert")
    button_payment = types.KeyboardButton(text="üí∏–û–ø–ª–∞—Ç–∞")
    button_faq = types.KeyboardButton(text="üìÉFAQ")
    button_support = types.KeyboardButton(text="üõ†Support")
    button_ref = types.KeyboardButton(text="‚öúÔ∏è–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞")
    markup.row(button_scrape, button_payment, button_faq, button_support, button_ref)
    if message.chat.id in config.ADMINS:
        button_admin = types.KeyboardButton(text="‚ö†–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å")
        markup.row(button_admin)
    bot.send_message(message.chat.id, "üí°–ú–µ–Ω—é", reply_markup=markup)

@bot.message_handler(commands=['start'])
def welcome(message):
    bot.send_message(message.chat.id, text="üìä–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ P2P-–†–æ—Å—Å–∏—è")
    db.update_ref(bot=bot,id=message.chat.id,message=message)
    schedule.every().day.at('00:00').do(db.update_subscription, message.chat.id, bot)
    while True:
        schedule.run_pending()
        sleep(1)





@bot.message_handler(content_types=['text'])
def handle_buttons(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    connection = psycopg2.connect(
        host=config.PG_HOST,
        database=config.PG_DB,
        user=config.PG_USER,
        password=config.PG_PASSWORD)
    connection.autocommit = True
    cursor = connection.cursor()
    cursor.execute("SELECT user_id VALUES FROM users")
    x = map(list, list(cursor.fetchall()))
    x = sum(x, [])
    cursor.execute(f"SELECT subscription VALUES FROM users WHERE user_id = {message.chat.id}")
    count = map(list, list(cursor.fetchall()))
    count = sum(count, [])
    if count[0] > 0 or message.chat.id in config.ADMINS:
        button_back = types.InlineKeyboardButton(text='‚¨ÖÔ∏è–ù–∞–∑–∞–¥', callback_data="back")
        if message.text == '‚¨ÖÔ∏è–ù–∞–∑–∞–¥':
            markup.row(button_back)
            start(message)
        if message.text == "üìÉFAQ":
            bot.send_message(message.chat.id, text=messages.faq_message,
                             reply_markup=markup, parse_mode="MarkdownV2")

        if message.text == "üõ†Support":
            markup.row(button_back)
            bot.send_message(message.chat.id, text=messages.support_message, reply_markup=markup, parse_mode="MarkdownV2")
        if message.text == "‚öúÔ∏è–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞":
            markup.row(button_back)
            bot.send_message(message.chat.id,
                             text=f"‚öúÔ∏è–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: {ref_url.format(message.chat.id)}\n\n–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–æ–Ω—É—Å—ã üéÅ",
                             reply_markup=markup)
        if message.text == "üí∏–û–ø–ª–∞—Ç–∞":
            button_payment_method = types.KeyboardButton(text="–î—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–±")
            markup.row(button_payment_method,button_back)
            payment.pay(message.chat.id,bot, markup)
            db.add_subscription(message.chat.id)
        if message.text == "–î—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–±":
            bot.send_message(message.chat.id, text=messages.payment_message, reply_markup=markup, parse_mode="MarkdownV2")
        if message.text == "üìàeXpert":
            button_normal_data = types.KeyboardButton(text='‚õì–ü–æ–ª—É—á–∏—Ç—å —Å–≤—è–∑–∫–∏')
            button_exclusive_data = types.KeyboardButton(text='üíé–ü–æ–ª—É—á–∏—Ç—å —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Å–≤—è–∑–∫–∏')
            markup.row(button_normal_data,button_exclusive_data,button_back)
            bot.send_message(message.chat.id, text='–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤—è–∑–æ–∫',reply_markup=markup)
        if message.text == "üíé–ü–æ–ª—É—á–∏—Ç—å —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Å–≤—è–∑–∫–∏":
            bot.send_message(message.chat.id, text='–ò–¥–µ—Ç –∞–Ω–∞–ª–∏–∑ —Ç–∞–±–ª–∏—Ü—ã —Å–≤—è–∑–æ–∫.–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ.')
            scrape.get_exclusive_data(message.chat.id,bot)
        if message.text == "‚õì–ü–æ–ª—É—á–∏—Ç—å —Å–≤—è–∑–∫–∏":
            bot.send_message(message.chat.id, text='–ò–¥–µ—Ç –∞–Ω–∞–ª–∏–∑ —Ç–∞–±–ª–∏—Ü—ã —Å–≤—è–∑–æ–∫.–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ.')
            scrape.get_normal_data(message.chat.id,bot)


        if message.chat.id in config.ADMINS and message.text == "‚ö†–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å":
            button_add = types.KeyboardButton(text="‚úÖ–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            button_delete = types.KeyboardButton(text="‚ùå–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            button_spam = types.KeyboardButton(text="‚úâÔ∏è–†–∞—Å—Å—ã–ª–∫–∞")
            button_show_subscribers = types.KeyboardButton(text="üë§–°–ø–∏—Å–æ–∫ –ø–æ–¥–ø–∏—Å–æ–∫")
            markup.add(button_add,button_delete,button_spam,button_show_subscribers, button_back)
            bot.send_message(message.chat.id, text='–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞',reply_markup=markup)
        if message.text == "‚úÖ–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è":
            msg = bot.send_message(message.chat.id, text="–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            bot.register_next_step_handler(msg,db.add_user,bot)


        if message.text == "‚ùå–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è":
            msg = bot.send_message(message.chat.id, text="–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            bot.register_next_step_handler(msg,db.delete_user,bot)
        if message.text == "‚úâÔ∏è–†–∞—Å—Å—ã–ª–∫–∞":
            msg = bot.send_message(message.chat.id, text="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏")
            bot.register_next_step_handler(msg,db.mailing,bot)
        if message.text == "üë§–°–ø–∏—Å–æ–∫ –ø–æ–¥–ø–∏—Å–æ–∫":
            db.get_subscribers(message.chat.id, bot)
    else:
        button_faq = types.KeyboardButton(text="üìÉFAQ")
        markup.row(button_faq)
        bot.send_message(message.chat.id, text=messages.access_message, reply_markup=markup, parse_mode="MarkdownV2")
        bot.id
        if message.text == "üìÉFAQ":
            bot.send_message(message.chat.id, text=messages.faq_message,
                             reply_markup=markup, parse_mode="MarkdownV2")


bot.infinity_polling(none_stop=True)
